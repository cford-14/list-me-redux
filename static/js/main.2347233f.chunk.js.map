{"version":3,"sources":["components/images/storefront.jpg","REDUX/List/listActionTypes.js","REDUX/List/listInitialState.js","REDUX/View/viewActionTypes.js","REDUX/View/viewInitialState.js","REDUX/submitStatus/submitActionType.js","REDUX/submitStatus/submitInitialState.js","REDUX/shops/shopsActionTypes.js","REDUX/shops/shopsInitialState.js","REDUX/contact/contactActionTypes.js","REDUX/contact/contactInitialState.js","REDUX/rootReducer.js","REDUX/List/listReducer.js","REDUX/View/viewReducer.js","REDUX/submitStatus/submitReducer.js","REDUX/shops/shopsReducer.js","REDUX/contact/contactReducer.js","REDUX/store.js","REDUX/List/listActionCreators.js","components/DeltaBox/Manage.js","REDUX/shops/shopsActionCreators.js","components/DeltaBox/NewList.js","components/DeltaBox/Share.js","REDUX/contact/contactActionCreators.js","components/Banner.js","components/AddBox/AddTo.js","components/DeltaBox/View.js","components/ListList.js","REDUX/View/viewActionCreator.js","serviceWorker.js","index.js"],"names":["module","exports","constants","listInitialState","masterList","vc","viewInitialState","shop","sc","submitInitialState","addSubmitStatus","shopsC","shopsInitialState","shopsList","checkList","cc","contactInitialState","rootReducer","combineReducers","state","action","type","console","log","Object","assign","itemNumber","checked","item","quantity","units","notes","stores","map","listItem","filter","shopToView","submitStatus","concat","shareData","shareName","shareEmail","shareMobile","shareStatus","store","createStore","nextId","Manage","props","handleDelete","bind","handleChange","shopToDelete","e","value","target","this","setState","deleteShopFromList","deleteShopFromShops","className","id","for","name","onChange","onClick","React","Component","connect","dispatch","NewList","handleClick","fieldCount","newShop","clickCount","length","addShop","alert","placeholder","handleSubmit","Share","selectList","addShareData","selectedShop","shops","Banner","src","image","alt","AddTo","toggleCheck","checkedShop","newStoreValue","indexOf","checkedStatusArray","preventDefault","storesArray","push","addItem","itemName","View","removeChecked","Number","line","style","margin","textAlign","class","ListList","history","listen","location","pathname","changeShopToView","to","withRouter","Boolean","window","hostname","match","routing","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2347233f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/storefront.b6c042b7.jpg\";","\n//ACTION TYPES\n\nexport const constants = {\n    ADD_ITEM: \"ADD_ITEM\", \n    TOGGLE_CHECK: \"TOGGLE_CHECK\",\n    REMOVE_CHECKED: \"REMOVE_CHECKED\",\n    DELETE_LIST: \"DELETE_LIST\", \n}\n\n","export const listInitialState = {\n    masterList: [ \n        {\n            \"itemNumber\": 10000,\n            \"checked\": false,\n            \"item\": \"cat\",\n            \"quantity\": 1,\n            \"units\": \"\",\n            \"notes\": \"\",\n            \"stores\": []\n        },\n    ]\n}\n\n","export const vc = {\n    CHANGE_SHOP_TO_VIEW: \"CHANGE_SHOP_TO_VIEW\" \n}","export const viewInitialState = {\n    shop: \"Master\"\n};","export const sc = {\n    CHANGE_ADD_SUBMIT_STATUS: \"CHANGE_ADD_SUBMIT_STATUS\"\n}","export const submitInitialState = {\n    addSubmitStatus: false\n}","export const shopsC = {\n    ADD_NEW_SHOP: \"ADD_NEW_SHOP\",\n    DELETE_SHOP: \"DELETE_SHOP\", \n    ADD_TO_CHECKLIST: \"ADD_TO_CHECKLIST\"\n}","export const shopsInitialState = {\n    shopsList: [\"Master\"],\n    checkList: {}\n};\n","export const cc = {\n    ADD_SHARE_DATA: \"ADD_SHARE_DATA\"\n}","export const contactInitialState = (\n    [\n        {\n        \"shop\": \"Master\",\n        \"shareName\": \"friend\",\n        \"shareEmail\": \"email@email\",\n        \"shareMobile\": \"111-111-1111\",\n        \"shareStatus\": \"view\"\n        }\n    ]\n)","import { combineReducers } from 'redux';\nimport MasterList from './List/listReducer';\nimport ViewReducer from './View/viewReducer';\nimport SubmitStatusReducer from './submitStatus/submitReducer';\nimport shopsReducer from './shops/shopsReducer';\nimport shareData from './contact/contactReducer';\n\nconst rootReducer = combineReducers({\n    masterList: MasterList, \n    shopToView: ViewReducer,\n    submitStatus: SubmitStatusReducer, \n    shopsList: shopsReducer,\n    shareData: shareData\n});\nexport default rootReducer;","import { constants } from './listActionTypes';\nimport { listInitialState } from  './listInitialState';\n\nexport default (state=listInitialState, action) => {\n    switch (action.type) {\n        case constants.ADD_ITEM:\n            console.log(state);\n            return Object.assign({}, state, {\n                masterList: [ \n                    ...state.masterList,  \n                        {\n                            itemNumber: action.itemNumber,\n                            checked: false,\n                            item: action.item,\n                            quantity: action.quantity,\n                            units: action.units,\n                            notes: action.notes,\n                            stores: action.stores\n                        }\n                    ]\n                }\n            )\n        case constants.TOGGLE_CHECK:\n            return Object.assign({}, state, {                \n                masterList: state.masterList.map(listItem => listItem.itemNumber === action.itemNumber ? {...listItem, checked: !listItem.checked} : listItem) //?\n                })\n        case constants.REMOVE_CHECKED:\n            return Object.assign({}, state, {\n                masterList: state.masterList.filter((listItem)=> {\n                    return listItem.checked === false \n                })\n            })\n        case constants.DELETE_LIST:\n            console.log(\"AAAAAAAAAAAA!\")\n            return Object.assign({}, state, {\n                masterList: state.masterList.map(listItem => {\n                    return(\n                        {\n                            ...listItem, \n                            stores: listItem.stores.filter(shop=> shop !== action.shop)\n                        }\n                    )\n                })\n            })\n                \n        default:\n            return state \n    }\n}\n\n","import { vc } from './viewActionTypes';\nimport { viewInitialState } from  './viewInitialState';\n\nexport default (state=viewInitialState, action) => {\n    switch (action.type) {\n        case vc.CHANGE_SHOP_TO_VIEW:\n            return Object.assign({}, state, {\n                shop: action.shop\n            })\n        default:\n            return state\n    }\n}\n\n\n","import { sc } from './submitActionType';\nimport { submitInitialState } from './submitInitialState';\n\nexport default (state=submitInitialState, action) => {\n    switch (action.type) {\n        case sc.CHANGE_ADD_SUBMIT_STATUS:\n            return Object.assign({}, state, {\n                addSubmitStatus: action.addSubmitStatus\n            })\n        default:\n            return state\n    }\n}","import { shopsC } from './shopsActionTypes';\nimport { shopsInitialState } from './shopsInitialState';\n\nexport default (state=shopsInitialState, action) => {\n    switch (action.type) {\n        case shopsC.ADD_NEW_SHOP:\n            return Object.assign({}, state, {\n                shopsList: state.shopsList.concat(action.shop),\n                checkList: {...state.checkList, \n                            [action.shop]: false\n                        }\n            }) \n        case shopsC.DELETE_SHOP:\n            return Object.assign({}, state, {\n                shopsList: state.shopsList.filter(shop => shop !== action.shop)\n            })\n        default:\n            return state\n    }\n};\n\n","import { cc } from './contactActionTypes';\nimport { contactInitialState } from './contactInitialState';\n\nexport default (state=contactInitialState, action) => {\n    switch (action.type) {\n        case cc.ADD_SHARE_DATA:\n            return Object.assign([], state, (\n                [\n                    ...state,\n                    {\n                        shop: action.shop,\n                        shareName: action.shareName,\n                        shareEmail: action.shareEmail,\n                        shareMobile: action.shareMobile,\n                        shareStatus: action.shareStatus\n                    }\n                ]\n            ))\n        default:\n            return state\n    }\n}","import { createStore } from 'redux';\nimport rootReducer from './rootReducer'\n\n\nexport const store = createStore(rootReducer);\n\n/*\nstate = \n    shareData: [{},{}],  //REDUX/contact\n    masterList: [ {itemNumber, checked, item, quantity, units, notes, stores}, {}, {}... ], //REDUC/List\n    shopsList: shopsList: [],  //REDUX/shops\n                checkList,  \n    submitStatus: addSubmitStatus: true/false //REDUX/submitStatus\n    shopToView: shop: \"\", //REDUX/View\n\n*/\n\n\n/*\nNEXT:\nmiddleware\nfirebase\n\n\nBONUS\nwork on submit from another page for AddTo and CreateNew\n    AddTo and addItmen Form --> submit = change state of submit status\n        AddTo --> change submit status to True\n        addItemForm --> if submitStatus = true:\n            1) deploy ADD_ITEM\n            2) clear fields by resetting local state\n            3) change submitStatus to false\nadd immages\n\n*/\n\n\n","import { constants } from './listActionTypes';\n\nlet nextId = 10001;\n\nexport const addItem = (item, quantity, units, notes, stores)  => { \n    return { \n        type: constants.ADD_ITEM, \n        itemNumber: nextId++, \n        checked: false,\n        item, \n        quantity, \n        units, \n        notes, \n        stores //array\n    }\n}; \n\n\nexport const toggleCheck = itemNumber => {\n    return { \n        type: constants.TOGGLE_CHECK, \n        itemNumber\n    }\n};\n\nexport const removeChecked = () => {\n    return {\n        type: constants.REMOVE_CHECKED, \n    }\n};\n\nexport const deleteShopFromList = shop => {\n    return {\n        type: constants.DELETE_LIST, \n        shop\n    }\n};\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport '../../App.css';\nimport { deleteShopFromList } from '../../REDUX/List/listActionCreators';\nimport { deleteShopFromShops } from '../../REDUX/shops/shopsActionCreators';\n\nclass Manage extends React.Component {\n    constructor(props){\n        super(props);\n        this.handleDelete=this.handleDelete.bind(this);\n        this.handleChange=this.handleChange.bind(this);\n        this.state = {\n            shopToDelete: ''\n        }\n    }\n\n    handleChange(e){\n        const value = e.target.value;\n        this.setState({\n                shopToDelete: value\n            })\n    }\n\n    handleDelete() {\n        this.props.deleteShopFromList(this.state.shopToDelete);\n        this.props.deleteShopFromShops(this.state.shopToDelete);\n        this.setState({shopToDelete: ''})  \n    }\n    \n    render(){\n        console.log(this.state.shopToDelete);\n        return(    \n            <div className=\"Box\" >\n                <div className=\"boxTitle\">\n                    <h3>Manage Lists</h3>\n                </div>\n                <div id=\"deleteList\">                            \n                    <p className=\"subtitle\">delete list</p>\n                    <form>\n                        <label for=\"deleteList\">select list to delete:<br/></label>\n                        \n                        <select id=\"deleteList\" name='deleteList' className='selectBox' onChange={e=> this.handleChange(e)}>\n                            <option value='null'>select list</option>\n                            {this.props.shopsList.map(shop => {\n                                if (shop !== \"Master\")\n                                return(\n                                    <option value={shop}>{shop}</option>    \n                                )\n                            })}\n                        </select>\n                    </form>\n                    <button className=\"submit\" type=\"submit\" onClick={e=>this.handleDelete()}>delete</button>\n                </div>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return { \n        shopsList: state.shopsList.shopsList\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        deleteShopFromList: (shop) => dispatch(deleteShopFromList(shop)),\n        deleteShopFromShops: (shop) => dispatch(deleteShopFromShops(shop))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Manage);\n","import { shopsC } from './shopsActionTypes';\n\nexport const addShop = shop => {\n    return {\n        type: shopsC.ADD_NEW_SHOP,\n        shop\n    }\n};\n\nexport const deleteShopFromShops = shop => {\n    return {\n        type: shopsC.DELETE_SHOP,\n        shop\n    }\n};\n\n","import React from 'react';\nimport '../../App.css';\nimport { Invite } from './fields';\nimport { connect } from 'react-redux';\nimport { addShop } from '../../REDUX/shops/shopsActionCreators';\n\nclass NewList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.state = {\n            fieldCount: 1,\n            newShop: ''\n        }\n    }\n\n    handleClick() {\n        let clickCount = this.state.fieldCount;\n        if (clickCount < 3) {\n            this.setState({fieldCount: clickCount+1})\n        }           \n    }\n\n    handleChange(e){\n        const value = e.target.value;\n        this.setState({\n                newShop: value\n            })\n    }\n\n    handleSubmit() {\n        if (this.state.newShop.length > 0 && this.props.shopsList.length <= 10) {\n            this.props.addShop(this.state.newShop);\n            this.setState({\n                newShop: ''\n            })\n        } else if(this.state.newShop.length <= 0) {\n            alert(\"Please enter a name for your new list.\")\n        } else {\n            alert(\"There is a limit of 10 lists per user.\")\n        }\n    }\n\n    render(){\n        /*let form=[];\n        for (let i=0; i< this.state.fieldCount; i++) {\n            form.push( <Invite />)\n        }*/\n        return(\n            <div className=\"Box\">\n                <div className=\"boxTitle\">\n                    <h3>Create New List</h3>\n                </div>\n                <div className=\"form\">\n                    <form>\n                        <input id=\"listName\" \n                        type=\"text\" \n                        name=\"newShop\" \n                        placeholder=\"list name\" \n                        value={this.state.newShop}\n                        onChange={e=>this.handleChange(e)}/>\n                    </form>\n                </div>\n                <div>\n                    <button className=\"submit\" type=\"submit\" onClick={e=>this.handleSubmit()}>submit</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        shopsList: state.shopsList.shopsList\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return{\n        addShop: (shop) => dispatch(addShop(shop))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewList)","import React from 'react';\nimport '../../App.css';\nimport { Invite, Contact, SelectSingleList } from './fields';\nimport { connect } from 'react-redux';\nimport { addShareData } from '../../REDUX/contact/contactActionCreators';\n\nclass Share extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick= this.handleClick.bind(this);\n        this.handleChange=this.handleChange.bind(this);\n        this.handleSubmit=this.handleSubmit.bind(this);\n        this.state={\n            fieldCount: 1,\n            selectList: 'null',\n            shareName: '',\n            shareEmail: '',\n            shareMobile: '',\n            shareStatus: 'view'\n        }\n    }\n\n    handleClick() {\n        let clickCount = this.state.fieldCount;\n        if (clickCount < 3) {\n            this.setState({fieldCount: clickCount+1})\n        }\n    }\n\n    handleChange(e){\n        const value = e.target.value;\n        const name = e.target.name;\n        this.setState({\n                [name]: value\n        });\n        console.log(this.state)   \n    }\n\n    handleSubmit() {\n        if (this.state.selectList !== \"null\" && (this.state.shareEmail.length > 0 || this.state.shareMobile.length > 0)) {\n            this.props.addShareData(\n                this.state.selectList, \n                this.state.shareName, \n                this.state.shareEmail, \n                this.state.shareMobile, \n                this.state.shareStatus\n            );\n            this.setState({\n                selectList: 'null',\n                shareName: '',\n                shareEmail: '',\n                shareMobile: '',\n                shareStatus: 'view'\n            })\n\n        } else {\n            if (this.state.selectedShop === \"null\") {\n                alert(\"Please select a list to share.\")\n            } if (this.state.shareEmail.length === 0 || this.state.shareMobile.length === 0) {\n                alert(\"Please enter an email address or phone number.\")\n            }\n        }\n    }\n\n    render() {\n        /*const form=[];\n        for (let i=0; i < this.state.fieldCount; i++) {\n            form.push(<Invite />)\n        }*/\n        let shops = this.props.shopsList.filter(shop => shop !== \"Master\");\n        \n        return(\n            <div className=\"Box\">\n                <div className=\"boxTitle\">\n                    <h3>Share List</h3>\n                </div>\n                {/*<SelectSingleList />*/}\n                <div>\n                    <p className=\"subtitle\">select list</p>\n                    <form>\n                        <select id=\"selectList\" \n                                name='selectList' \n                                className='selectBox'\n                                onChange={e=>this.handleChange(e)}>\n                            <option value='null'>select list</option>\n                            {shops.map(shop => \n                                <option value={shop}>{shop}</option>\n                            )}\n                        </select>\n                    </form>\n                </div>\n                <div className='formFields'>\n                    {/*{form}\n                    <button className=\"addField\" type=\"button\" onClick={(e) => this.handleClick()}>add fields</button>*/}\n                    <div className=\"form\">\n                        <form>\n                            <input id=\"inviteName\" \n                                    type=\"text\" \n                                    name=\"shareName\" \n                                    value={this.state.shareName}\n                                    placeholder=\"friend's name\" \n                                    onChange={e=>this.handleChange(e)}/>\n                        </form>\n                        <form>\n                            <input id=\"inviteEmail\" \n                                    type=\"text\" \n                                    name=\"shareEmail\" \n                                    value={this.state.shareEmail}\n                                    placeholder=\"email address\" \n                                    onChange={e=>this.handleChange(e)}/>\n                        </form>\n                        <p className=\"or\">OR</p>\n                        <form>\n                            <input id=\"shareMobile\" \n                                    type=\"text\" \n                                    name=\"shareMobile\"\n                                    value={this.state.shareMobile} \n                                    placeholder=\"mobile number\" \n                                    onChange={e=>this.handleChange(e)}/>\n                        </form>\n                        <form>\n                            <div className='stackedRadio'>\n                                <div className='radioOption'>\n                                    <input id=\"contribute\" \n                                            type=\"radio\" \n                                            name=\"shareStatus\" \n                                            value=\"contribute\" \n                                            checked={this.state.shareStatus === \"contribute\"}\n                                            onChange={e=>this.handleChange(e)}/><p className='radioLabel'>view and edit</p>\n                                </div>\n                                <div className='radioOption'>\n                                    <input id=\"viewOnly\" \n                                            type=\"radio\" \n                                            name=\"shareStatus\" \n                                            value=\"view\" \n                                            checked={this.state.shareStatus === \"view\"}\n                                            onChange={e=>this.handleChange(e)}/><p className='radioLabel'>view only</p>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <div>\n                    <button className=\"submit\" type=\"submit\" onClick={e=>this.handleSubmit()}>submit</button>\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        shopsList: state.shopsList.shopsList\n        //contributors: state.contributors.contributors\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        addShareData: (selectList, shareName, shareEmail, shareMobile, shareStatus) => dispatch(addShareData(selectList, shareName, shareEmail, shareMobile, shareStatus))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Share)","import { cc } from './contactActionTypes';\n\nexport const addShareData = (shop, shareName, shareEmail, shareMobile, shareStatus) => {\n    return {\n        type: cc.ADD_SHARE_DATA,\n        shop,\n        shareName,\n        shareEmail,\n        shareMobile,\n        shareStatus\n    }\n}","import React from 'react';\nimport '../App.css';\nimport image from './images/storefront.jpg'\n\nexport function Banner() {\n    return(\n        <div className=\"banner\">\n            <img className=\"storefront\" src={image} alt=\"storefront\"></img>\n            <div className=\"title\">\n                <h1>List Me</h1>\n            </div>\n    </div>\n    )\n}","import React from 'react';\nimport '../../App.css';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../REDUX/List/listActionCreators';\n\n\nclass AddTo extends React.Component  {\n    constructor(props) {\n        super(props);\n        this.handleChange=this.handleChange.bind(this);\n        this.toggleCheck=this.toggleCheck.bind(this);\n        this.handleSubmit=this.handleSubmit.bind(this);\n        this.state = {\n            //fieldCount: 1,\n            item: '',\n            quantity: null,\n            units: '',\n            notes: '',\n            stores: [],\n            checkedShop: this.props.checkList\n        }\n    }\n\n    /*handleClick() {\n        let clickCount = this.state.fieldCount;\n        if (clickCount <= 5) {\n            this.setState({fieldCount: clickCount+1})\n        }           \n    }*/\n\n    handleChange(e){\n        const value = e.target.value;\n        const name = e.target.name;\n        let newStoreValue = this.state.stores.indexOf(value) > 0 ? this.state.stores : this.state.stores.concat(value)\n        this.setState({\n                [name]: name === \"stores\" ? newStoreValue : value\n            })\n    }\n\n    toggleCheck(e) {\n        const name=e.target.name;\n        let checkedStatusArray = this.state.checkedShop;\n        checkedStatusArray[name] = !this.state.checkedShop[name]\n        this.setState({ checked: checkedStatusArray})\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let storesArray = []\n        this.props.shopsList.map(shop =>{\n            if (this.state.checkedShop[shop] === true){\n                storesArray.push(shop)\n            }\n        });\n        if (this.state.item.length > 0 && storesArray.length > 0) {\n            this.props.addItem(\n                this.state.item, \n                this.state.quantity, \n                this.state.units, \n                this.state.notes, \n                storesArray\n            );\n        } else {\n            if (this.state.item.length === 0) {\n                alert(\"Please enter an item name.\")\n            } if (storesArray.length === 0) {\n                alert(\"Please select a list for your item.\")\n            }\n        }\n        this.setState({\n            item: '',\n            quantity: null,\n            units: '',\n            notes: '',\n            stores: []\n        })\n    }\n\n    render() {\n        /*const form=[];\n        for (let i=0; i< this.state.fieldCount; i++) {\n            form.push( <AddItem submitClicked={this.state.submitClicked}/>)\n        };*/\n        let shops = this.props.shopsList.filter(shop => shop !== \"Master\");\n        if (this.props.shopsList.length > 1) {\n            return(\n                <div className=\"addBox\">\n                    <div className=\"boxTitle\">\n                        <h3>Add to Lists</h3>\n                    </div>\n                    {/*{form}*/}\n                        <div className=\"form\">\n                            <form>\n                                <input id=\"item\" \n                                    type=\"text\" \n                                    name=\"item\" \n                                    placeholder=\"item name\" \n                                    value={this.state.item} \n                                    onChange={e=>this.handleChange(e)}/>\n                                <input id=\"quantity\" \n                                    type=\"number\" \n                                    name=\"quantity\" \n                                    placeholder=\"#\" \n                                    value={this.state.quantity} \n                                    onChange={e=>this.handleChange(e)}/>\n                                <input id=\"units\" \n                                    type=\"text\" \n                                    name=\"units\" \n                                    placeholder=\"units\" \n                                    value={this.state.units} \n                                    onChange={e=>this.handleChange(e)}/>\n                            </form>\n                            <textarea \n                                name=\"notes\" \n                                placeholder=\"notes\"\n                                value={this.state.notes} \n                                onChange={e=>this.handleChange(e)}>\n                            </textarea>\n                            <form>\n                            {shops.map(shop =>\n                                <label>\n                                    <input type=\"checkbox\" name={shop} checked={this.state.checkedShop[shop]} onChange={e=> this.toggleCheck(e)}/>\n                                    {shop}\n                                </label>\n                                )}\n                            </form>\n                        </div>\n                    {/*<div>\n                        <button class=\"addField\" type=\"button\" onClick={(e) => this.handleClick()}>add fields</button>\n                    </div>*/}\n                    <div>\n                        <button className=\"submit\" type=\"submit\" onClick={e=>this.handleSubmit(e)}>submit</button>\n                    </div>\n                    \n                </div>\n            )\n            } else {\n                return(\n                    <div className=\"addBox\">\n                        <div className=\"boxTitle\">\n                            <h3>please create a list</h3>\n                        </div>\n                    </div>\n                )\n            }\n        }\n};\n\nconst mapStateToProps = (state) => {\n    return{\n        masterList: state.masterList.masterList,\n        //submitStatus: state.submitStatus.addSubmitStatus,\n        shopsList: state.shopsList.shopsList, \n        checkList: state.shopsList.checkList\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        addItem: (itemName, quantity, units, notes, stores) => dispatch(addItem(itemName, quantity, units, notes, stores)),\n        //changeAddSubmitStatus: (addSubmitStatus) => dispatch(changeAddSubmitStatus(addSubmitStatus))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTo);","import React from 'react';\nimport { connect } from 'react-redux';\nimport '../../App.css';\nimport { toggleCheck } from '../../REDUX/List/listActionCreators';\nimport { removeChecked } from '../../REDUX/List/listActionCreators';\n\n\nclass View extends React.Component {\n    constructor(props){\n        super(props);\n        this.toggleCheck=this.toggleCheck.bind(this);\n        this.removeChecked=this.removeChecked.bind(this)\n    }\n\n    toggleCheck(e) {\n        const itemNumber = Number(e.target.name);\n        console.log(itemNumber);\n        this.props.toggleCheck(itemNumber)\n\n    }\n\n    removeChecked(e) {\n        this.props.removeChecked()\n    }\n    \n    render() {\n        console.log(this.props.masterList.map(line => line));\n        if (this.props.shopToView === \"Master\") {\n            return(\n                <div className=\"Box\">\n                <div className=\"boxTitle\">\n                    <h3>{this.props.shopToView}</h3>\n                </div>\n                <table style={{margin: \"5%\"}}>\n                    <tr>\n                        <th>item</th>\n                        <th>quantity</th>\n                        <th>units</th>\n                        <th>notes</th>\n                        <th>stores</th>\n                    </tr>\n                    {this.props.masterList.map(line => { \n                        if (line.stores.length > 0){\n                            return (\n                                <tr>\n                                    <td>{line.item}</td>\n                                    <td style={{textAlign: \"center\"}}>{line.quantity}</td>\n                                    <td>{line.units}</td>\n                                    <td>{line.notes}</td>\n                                    <td>{line.stores.map(store => {\n                                            return store + '  '\n                                        }\n                                    )}</td>\n                    \n                            </tr>\n                            \n                            )\n                        }\n                    })}\n                </table>\n            </div>\n            )\n        } else {\n            return(\n                <div className=\"Box\">\n                    <div className=\"boxTitle\">\n                        <h3>{this.props.shopToView}</h3>\n                    </div>\n                    <table style={{margin: \"5%\"}}>\n                        <tr>\n                            <th>  </th>\n                            <th>item</th>\n                            <th>quantity</th>\n                            <th>units</th>\n                            <th>notes</th>\n                        </tr>\n                        {this.props.masterList.map(line => {\n                            if (line.stores.indexOf(this.props.shopToView) !== -1) {\n                                return(\n                                    <tr>\n                                        <td><input type=\"checkbox\" name={line.itemNumber} value={line.checked} onChange={e=>this.toggleCheck(e)}/></td>\n                                        <td>{line.item}</td>\n                                        <td style={{textAlign: \"center\"}}>{line.quantity}</td>\n                                        <td>{line.units}</td>\n                                        <td>{line.notes}</td>\n                                    </tr>\n                                )}\n                            })\n                        } \n                    </table>\n                    <div>\n                        <button class=\"removeChecked\" type=\"button\" onClick={(e) => this.removeChecked(e)}>remove checked</button>\n                    </div>\n                </div>\n            )\n        }\n    }\n};\n\nconst mapStateToProps = (state) => {\n   return { \n        masterList: state.masterList.masterList, \n        shopToView: state.shopToView.shop\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleCheck: (itemNumber) => dispatch(toggleCheck(itemNumber)),\n        removeChecked: () => dispatch(removeChecked())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(View);\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport '../App.css';\nimport { changeShopToView } from '../REDUX/View/viewActionCreator';\n\nclass ListList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick=this.handleClick.bind(this);\n    }\n\n    componentWillMount() {\n        this.props.history.listen(()=> {\n        console.log('New URL', this.props.history.location.pathname);\n        })\n    }\n\n    handleClick(e, value) {\n        e.preventDefault();\n        this.props.changeShopToView(value)\n    }\n    \n    render() {\n        let shops = this.props.shopsList;\n\n        return(\n            <div className=\"listBox\">\n                <div className=\"listBoxTitle\">\n                    <h3>Shopping <br/> Lists</h3>\n                </div>\n                {shops.map(shop => \n                    <div className=\"listButton\" value={shop} onClick={(e) => this.handleClick(e, shop)}>\n                    <Link to=\"/view\" className=\"listButtonText\">\n                            <p>{shop}</p>\n                    </Link>\n                    </div>\n                )}\n            </div>\n        )\n    }\n};\n\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return { \n        masterList: state.masterList, \n        shopToView: state.shopToView,\n        shopsList: state.shopsList.shopsList\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        changeShopToView: (newShop) => dispatch(changeShopToView(newShop))\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ListList));\n","import { vc } from './viewActionTypes';\n\nexport const changeShopToView = (shop) => {\n    return {\n        type: vc.CHANGE_SHOP_TO_VIEW,\n        shop\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, HashRouter, Link, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport  { Provider } from 'react-redux';\nimport { store } from './REDUX/store';\nimport './index.css';\nimport Manage from './components/DeltaBox/Manage';\nimport NewList from './components/DeltaBox/NewList';\nimport Share from './components/DeltaBox/Share';\nimport { Banner } from './components/Banner';\nimport AddTo from './components/AddBox/AddTo';\nimport  View  from './components/DeltaBox/View';\nimport ListList from './components/ListList';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst routing = (\n  <Provider store={store}>\n    <HashRouter>\n      <div className=\"App\">\n        <Banner />\n        <div className=\"nav\">\n          <Link to=\"/\" className=\"menuOption\"><h3>Create List</h3></Link>\n          <Link to=\"/manage\" className=\"menuOption\"><h3>Manage</h3></Link>\n          <Link to=\"/share\" className=\"menuOption\"><h3>Share Lists</h3></Link>      \n        </div>\n        <ListList /> \n        <div class=\"functionBox\">\n          <div class=\"functionBoxGrid\">\n            <AddTo />\n            <Switch className=\"Delta\">\n              <Route exact path=\"/\" component={NewList} />\n              <Route path=\"/manage\" component={Manage} />\n              <Route path=\"/share\" component={Share} />\n              <Route path=\"/view\" component={View}/>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </HashRouter>\n  </Provider>  \n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}